# uber build for grapinator and oracle client
FROM alpine:3

# Note: This build includes required drivers for Oracle connectivity download from:
# https://download.oracle.com/otn_software/linux/instantclient/211000/instantclient-basic-linux.x64-21.1.0.0.0.zip
ENV ORCL_URL https://download.oracle.com/otn_software/linux/instantclient/211000
ENV ORCL_BIN instantclient-basic-linux.x64-21.1.0.0.0.zip

ENV ORACLE_BASE /usr/lib/instantclient
ENV LD_LIBRARY_PATH ${ORACLE_BASE}:${LD_LIBRARY_PATH}
ENV SERVICE_HOME /opt/grapinator

# required to compile python cryptography lib
ENV CRYPTOGRAPHY_DONT_BUILD_RUST 1

# set local docker resources relative path
ENV DOCKER_RESOURCES docker/resources

# Set the working directory to SERVICE_HOME
WORKDIR $SERVICE_HOME

# copy service code to SERVICE_HOME
COPY $DOCKER_RESOURCES/grapinator_service.sh \
README.md \
requirements.txt \
setup.py $SERVICE_HOME/

COPY grapinator/ $SERVICE_HOME/grapinator 

# install all dependencies for build
RUN apk add --update-cache \
	curl \
	libaio \
	libnsl \
	openssl-dev \
	gcc \
	g++ \
	make \
	musl-dev \
	libc6-compat \
	python3 \
	python3-dev \
	libffi-dev \
	libressl-dev \
	py3-pip \
	git \
&& rm -rf /var/cache/apk/* \
&& echo "Download Oracle driver: $SERVICE_HOME/$ORCL_BIN" \
&& curl --output $SERVICE_HOME/$ORCL_BIN $ORCL_URL/$ORCL_BIN \
&& echo "Install Oracle drivers..." \
&& mkdir -p $ORACLE_BASE \
&& unzip -j -d $ORACLE_BASE $SERVICE_HOME/$ORCL_BIN \
&& rm $SERVICE_HOME/$ORCL_BIN \
&& ln -s ${ORACLE_BASE}/libclntsh.so.21.1 /usr/lib/libclntsh.so \
&& ln -s ${ORACLE_BASE}/libocci.so.21.1 /usr/lib/libocci.so \
&& ln -s ${ORACLE_BASE}/libnnz21.so /usr/lib/libnnz21.so \
&& ln -s /lib/libc.so.6 /usr/lib/libresolv.so.2 \
&& ln -s /lib64/ld-linux-x86-64.so.2 /usr/lib/ld-linux-x86-64.so.2 \
&& pip install --upgrade pip \
&& echo "Installing grapinator..." \
&& pip install -r requirements.txt \
&& python3 setup.py develop \
&& echo "Removing unneeded software for runtime container..." \
&& apk del gcc g++ make musl-dev python3-dev libffi-dev libressl-dev git \
&& rm -rf /var/cache/apk/*

EXPOSE 8443

ENTRYPOINT ["/bin/sh", "-c", "$SERVICE_HOME/grapinator_service.sh"]